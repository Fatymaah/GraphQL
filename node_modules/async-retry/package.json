{
  "_args": [
    [
      {
        "raw": "async-retry@^1.2.1",
        "scope": null,
        "escapedName": "async-retry",
        "name": "async-retry",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Student\\Documents\\graphql-tutorial\\node_modules\\apollo-engine-reporting"
    ]
  ],
  "_from": "async-retry@>=1.2.1 <2.0.0",
  "_id": "async-retry@1.2.1",
  "_inCache": true,
  "_location": "/async-retry",
  "_nodeVersion": "9.6.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/async-retry_1.2.1_1519747921112_0.0700060700677938"
  },
  "_npmUser": {
    "name": "leo",
    "email": "leo@zeit.co"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "async-retry@^1.2.1",
    "scope": null,
    "escapedName": "async-retry",
    "name": "async-retry",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/apollo-engine-reporting"
  ],
  "_resolved": "https://registry.npmjs.org/async-retry/-/async-retry-1.2.1.tgz",
  "_shasum": "308c6c4e1d91e63397a4676290334ae9bda7bcb1",
  "_shrinkwrap": null,
  "_spec": "async-retry@^1.2.1",
  "_where": "C:\\Users\\Student\\Documents\\graphql-tutorial\\node_modules\\apollo-engine-reporting",
  "ava": {
    "failFast": true
  },
  "bugs": {
    "url": "https://github.com/zeit/async-retry/issues"
  },
  "dependencies": {
    "retry": "0.10.1"
  },
  "description": "Retrying made simple, easy and async",
  "devDependencies": {
    "ava": "0.25.0",
    "node-fetch": "2.0.0",
    "then-sleep": "1.0.1",
    "xo": "0.20.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FadV8UDcyZDjzb6eV7MCJj0bfrNjwKw7/X0QHPFCbYP6T20FXgZCYXpJKlQC8RxEQP1E6Xs8pNHdh3bcrZAuAw==",
    "shasum": "308c6c4e1d91e63397a4676290334ae9bda7bcb1",
    "tarball": "https://registry.npmjs.org/async-retry/-/async-retry-1.2.1.tgz",
    "fileCount": 9,
    "unpackedSize": 155863
  },
  "gitHead": "bcc9ed59355145b6733a825031ab1fcd9554b75d",
  "homepage": "https://github.com/zeit/async-retry#readme",
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "arunoda",
      "email": "arunoda.susiripala@gmail.com"
    },
    {
      "name": "iamevilrabbit",
      "email": "hello@evilrabb.it"
    },
    {
      "name": "igorklopov",
      "email": "igor@klopov.com"
    },
    {
      "name": "jamo",
      "email": "jamo@isotalo.fi"
    },
    {
      "name": "javivelasco",
      "email": "javier.velasco86@gmail.com"
    },
    {
      "name": "leo",
      "email": "leo@zeit.co"
    },
    {
      "name": "lipp",
      "email": "gelipp@gmail.com"
    },
    {
      "name": "matheuss",
      "email": "me@matheus.top"
    },
    {
      "name": "nkzawa",
      "email": "naoyuki.kanezawa@gmail.com"
    },
    {
      "name": "olliv",
      "email": "olli@zeit.co"
    },
    {
      "name": "qix",
      "email": "i.am.qix@gmail.com"
    },
    {
      "name": "rauchg",
      "email": "rauchg@gmail.com"
    },
    {
      "name": "sergiodxa",
      "email": "sergiodxa@gmail.com"
    },
    {
      "name": "timneutkens",
      "email": "tim@timneutkens.nl"
    },
    {
      "name": "tootallnate",
      "email": "nathan@tootallnate.net"
    },
    {
      "name": "zeit-admin",
      "email": "team@zeit.co"
    },
    {
      "name": "zeit-bot",
      "email": "npm-bot@zeit.co"
    }
  ],
  "name": "async-retry",
  "optionalDependencies": {},
  "readme": "# async-retry\n\n[![Build Status](https://travis-ci.org/zeit/async-retry.svg?branch=master)](https://travis-ci.org/zeit/async-retry)\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n[![Slack Channel](http://zeit-slackin.now.sh/badge.svg)](https://zeit.chat/)\n\nRetrying made simple, easy, async.\n\n## Usage\n\n```js\n// Packages\nconst retry = require('async-retry')\nconst fetch = require('node-fetch')\n\nawait retry(async bail => {\n  // if anything throws, we retry\n  const res = await fetch('https://google.com')\n\n  if (403 === res.status) {\n    // don't retry upon 403\n    bail(new Error('Unauthorized'))\n    return\n  }\n\n  const data = await res.text()\n  return data.substr(0, 500)\n}, {\n  retries: 500\n})\n```\n\n### API\n\n```js\nretry(retrier : Function, opts : Object) => Promise\n```\n\n- The supplied function can be `async` or not. In other words, it can be a function that returns a `Promise` or a value.\n- The supplied function receives two parameters\n  1. A `Function` you can invoke to abort the retrying (bail)\n  2. A `Number` identifying the attempt. The absolute first attempt (before any retries) is `1`.\n- The `opts` are passed to `node-retry`. Read [its docs](https://github.com/tim-kos/node-retry)\n  * `retries`: The maximum amount of times to retry the operation. Default is `10`.\n  * `factor`: The exponential factor to use. Default is `2`.\n  * `minTimeout`: The number of milliseconds before starting the first retry. Default is `1000`.\n  * `maxTimeout`: The maximum number of milliseconds between two retries. Default is `Infinity`.\n  * `randomize`: Randomizes the timeouts by multiplying with a factor between `1` to `2`. Default is `false`.\n  * `onRetry`: an optional `Function` that is invoked after a new retry is performed. It's passed the `Error` that triggered it as a parameter.\n\n## Authors\n\n- Guillermo Rauch ([@rauchg](https://twitter.com/rauchg)) - [▲ZEIT](https://zeit.co)\n- Leo Lamprecht ([@notquiteleo](https://twitter.com/notquiteleo)) - [▲ZEIT](https://zeit.co)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zeit/async-retry.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.2.1",
  "xo": {
    "esnext": true,
    "space": true,
    "semicolon": false,
    "ignores": [
      "examples/**/*"
    ]
  }
}
