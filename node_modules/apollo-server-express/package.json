{
  "_args": [
    [
      {
        "raw": "apollo-server-express",
        "scope": null,
        "escapedName": "apollo-server-express",
        "name": "apollo-server-express",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Student\\Documents\\graphql-tutorial"
    ]
  ],
  "_from": "apollo-server-express@latest",
  "_id": "apollo-server-express@2.0.4",
  "_inCache": true,
  "_integrity": "",
  "_location": "/apollo-server-express",
  "_nodeVersion": "10.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-server-express_2.0.4_1534799905855_0.12515574833285736"
  },
  "_npmUser": {
    "name": "mdg",
    "email": "npm@meteor.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {
    "bytes": "3.0.0",
    "content-type": "1.0.4",
    "debug": "2.6.9",
    "depd": "1.1.2",
    "http-errors": "1.6.3",
    "on-finished": "2.3.0",
    "safer-buffer": "2.1.2",
    "type-is": "1.6.16",
    "unpipe": "1.0.0"
  },
  "_requested": {
    "raw": "apollo-server-express",
    "scope": null,
    "escapedName": "apollo-server-express",
    "name": "apollo-server-express",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.0.4.tgz",
  "_shasum": "04fe852b532402b1ebac68f2a847120abebc376d",
  "_shrinkwrap": null,
  "_spec": "apollo-server-express",
  "_where": "C:\\Users\\Student\\Documents\\graphql-tutorial",
  "author": {
    "name": "opensource@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-server/issues"
  },
  "dependencies": {
    "@apollographql/apollo-upload-server": "^5.0.3",
    "@apollographql/graphql-playground-html": "^1.6.0",
    "@types/accepts": "^1.3.5",
    "@types/body-parser": "1.17.0",
    "@types/cors": "^2.8.4",
    "@types/express": "4.16.0",
    "accepts": "^1.3.5",
    "apollo-server-core": "2.0.4",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "graphql-subscriptions": "^0.5.8",
    "graphql-tools": "^3.0.4",
    "type-is": "^1.6.16"
  },
  "description": "Production-ready Node.js GraphQL server for Express and Connect",
  "devDependencies": {
    "apollo-server-integration-testsuite": "2.0.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-9mxcFpnTgQTmrsvVRRofEY7N1bJYholjv99IfN8puu5lhNqj8ZbOPZYrw+zd+Yh4rZSonwx76ZzTRzM00Yllfw==",
    "shasum": "04fe852b532402b1ebac68f2a847120abebc376d",
    "tarball": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.0.4.tgz",
    "fileCount": 27,
    "unpackedSize": 61630,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbezAjCRA9TVsSAnZWagAAtiQQAJ9cIJ7txSoF3kQXUYJ4\ndz0mWGu8CadtczHZLDrrubGmINF1peMq4IIgEyRCYxcE2lqs86YlmAloJwd6\nEAz1IddcIZu7EbsBs97ssPJrilzQKPA1LeYZFtwCX2rmDyzwJ7iu4zl9cyym\nPs3uH6gZvzrLPpBiUs3xZ/kqHksRW6GvlUVwqm+fZezZ4/f1M3HCvl9Nrn9c\n7pUmaq5RheBBJFTxYXSdxdNLBWZ9yuZbGqWn9L4+L6qoUfigw5qaSgzuCaHc\nGGHy7JNxwpr7PZYNiyXw/T7CZ0K0HTWAJ//HLmHsTePBoZkwtzYeO9WWcvyG\nGKucf6YUDOjYE+9rXF8Y6WfXgvVNKrwNND2kIFRK39f1rw1K/a8yhNn0gqSN\nBX119bHYPKR8GN4eEm7nhWQUCHeiQhAys+K9f/+CR+pRJP5YJQPxDIoOOO9j\nDCJBIYTsh+btVb+mJUSS30elW8LWtHoM+qgIq8IzXYqVyJfCgpCoHvHucsnA\nM42w9ZNkPHyfo8FK9f1E8yCBSK02Hagt0heWP7ir+6TlFOq10U221CKej6Fj\nyQrjEn/BtLpyu8n2RgrPpIBCaRYYuV433A6tCAEEE31DES7fpr77fUyhSfkF\nIqfpcDiDrRF3KwOC+b4VaxuTn7tSM0y6/uk71uMs/HQlDrPR2Rb69jAKu7jT\n3OcZ\r\n=lXiX\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "2657e9b25bc0d22336ce2b3b06784325830da6df",
  "homepage": "https://github.com/apollographql/apollo-server#readme",
  "keywords": [
    "GraphQL",
    "Apollo",
    "Server",
    "Express",
    "Connect",
    "Javascript"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "abernix",
      "email": "npmjs@jro.cc"
    },
    {
      "name": "evanshauser",
      "email": "evanshauser@gmail.com"
    },
    {
      "name": "jbaxleyiii",
      "email": "james@meteor.com"
    },
    {
      "name": "martijnwalraven",
      "email": "martijn@martijnwalraven.com"
    },
    {
      "name": "mdg",
      "email": "npm@meteor.com"
    },
    {
      "name": "sashko",
      "email": "s.stubailo@gmail.com"
    }
  ],
  "name": "apollo-server-express",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.12.0 || ^0.13.0 || ^14.0.0"
  },
  "readme": "---\ntitle: Express / Connect\ndescription: Setting up Apollo Server with Express.js or Connect\n---\n\n[![npm version](https://badge.fury.io/js/apollo-server-express.svg)](https://badge.fury.io/js/apollo-server-express) [![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server) [![Coverage Status](https://coveralls.io/repos/github/apollographql/apollo-server/badge.svg?branch=master)](https://coveralls.io/github/apollographql/apollo-server?branch=master) [![Get on Slack](https://img.shields.io/badge/slack-join-orange.svg)](https://www.apollographql.com/#slack)\n\nThis is the Express and Connect integration of GraphQL Server. Apollo Server is a community-maintained open-source GraphQL server that works with many Node.js HTTP server frameworks. [Read the docs](https://www.apollographql.com/docs/apollo-server/). [Read the CHANGELOG.](https://github.com/apollographql/apollo-server/blob/master/CHANGELOG.md)\n\n```sh\nnpm install apollo-server-express\n```\n\n## Express\n\n```js\nconst express = require('express');\nconst { ApolloServer, gql } = require('apollo-server-express');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = express();\nserver.applyMiddleware({ app });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n## Connect\n\n```js\nconst connect = require('connect');\nconst { ApolloServer, gql } = require('apollo-server-express');\nconst query = require('qs-middleware');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = connect();\nconst path = '/graphql';\n\nserver.use(query());\nserver.applyMiddleware({ app, path });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n> Note; `qs-middleware` is only required if running outside of Meteor\n\n## Principles\n\nGraphQL Server is built with the following principles in mind:\n\n* **By the community, for the community**: GraphQL Server's development is driven by the needs of developers\n* **Simplicity**: by keeping things simple, GraphQL Server is easier to use, easier to contribute to, and more secure\n* **Performance**: GraphQL Server is well-tested and production-ready - no modifications needed\n\nAnyone is welcome to contribute to GraphQL Server, just read [CONTRIBUTING.md](https://github.com/apollographql/apollo-server/blob/master/CONTRIBUTING.md), take a look at the [roadmap](https://github.com/apollographql/apollo-server/blob/master/ROADMAP.md) and make your first PR!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-express"
  },
  "scripts": {
    "clean": "rm -rf dist",
    "compile": "tsc",
    "prepare": "npm run clean && npm run compile"
  },
  "types": "dist/index.d.ts",
  "version": "2.0.4"
}
